service: node-aws-lambda-crud
frameworkVersion: '2 || 3'

# 람다배포시 package에서 제외
package:
  exclude:
    - node_modules/**
    - package.json
    - package-lock.json

provider:
  name: aws
  runtime: nodejs16.x
   # Version of hashing algorithm used by Serverless Framework for function packaging
  lambdaHashingVersion: '20201221'
  region: ap-northeast-2
  environment:
    #환경변수에 NODE_PATH 설정 node_modules 위치
    NODE_PATH: "./:/opt/node_modules"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: 
        - arn:aws:dynamodb:ap-northeast-2:897982041490:table/BoardTable 
        - arn:aws:dynamodb:ap-northeast-2:897982041490:table/UserTable 

functions:
  Posts:
    handler: services/posts.Posts
    layers:
      - arn:aws:lambda:ap-northeast-2:897982041490:layer:NodeDataStreamUtils:latest
    events:
      - http: #create
          path: /addUser
          method: post
      - http: #create
          path: /posts
          method: post
      - http: #getalltasks
          path: /posts
          method: get
      - http: #get task by ids
          path: /postsbyids
          method: get
      - http: #get task by one id
          path: /posts/{id}
          method: get
      - http: #update
          path: /posts/{id}
          method: put
      - http: #delete by id
          path: /posts
          method: delete
      - http: #page
          path: /page
          method: get
      - http: 
          path: /test
          method: get
      - http: #create board
          path: /boards
          method: post
      - http: #update board
          path: /boards/{id}
          method: put
      - http: #get all board
          path: /boards
          method: get
      - http: #get posts by board
          path: /postsbyboard/{id}
          method: get

resources:
  Resources:
    BoardTable:
          Type: AWS::DynamoDB::Table
          Properties:
            TableName: BoardTable
            BillingMode: PAY_PER_REQUEST
            AttributeDefinitions:
              - AttributeName: categories
                AttributeType: S
              - AttributeName: id
                AttributeType: S
              - AttributeName: userid
                AttributeType: S
              - AttributeName: upperid
                AttributeType: S
              - AttributeName: createdAt
                AttributeType: N
            KeySchema:
              - AttributeName: categories
                KeyType: HASH
              - AttributeName: id
                KeyType: RANGE
            GlobalSecondaryIndexes:
              - IndexName: userIndex
                KeySchema:
                  - AttributeName: userid
                    KeyType: HASH
                  - AttributeName: createdAt
                    KeyType: RANGE
                Projection:
                  ProjectionType: 'ALL'
              - IndexName: upperIdIndex
                KeySchema:
                  - AttributeName: upperid
                    KeyType: HASH
                  - AttributeName: createdAt
                    KeyType: RANGE
                Projection:
                  ProjectionType: 'ALL'
              - IndexName: categoryIndex
                KeySchema:
                  - AttributeName: categories
                    KeyType: HASH
                  - AttributeName: createdAt
                    KeyType: RANGE
                Projection:
                  ProjectionType: 'ALL'
        

    userTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: UserTable
          BillingMode: PAY_PER_REQUEST
          AttributeDefinitions:
            - AttributeName: id
              AttributeType: S
            - AttributeName: createdAt
              AttributeType: N
          KeySchema: # dynamodb의 key를 설정합니다.
            - AttributeName: id
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE

    

plugins:
  - serverless-offline
  - serverless-latest-layer-version